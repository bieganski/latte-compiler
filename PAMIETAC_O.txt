# PAMIETAC O

* Wyrażenie logiczne zwracają typ boolean i są obliczane leniwie 
(drugi argument nie jest wyliczany gdy pierwszy determinuje wartość wyrażenia).


# PYTANIA

* builtins type-check ?




# TODO

* sprawdzanie czy nie robimy T1 + T2 (ez)

* każdy call - argumenty - typy i liczba  (ez)

* dwa returny z rzędu (ez) 2

* każda funkcja o typie nie-void - conajmniej jeden return 2

* unikalne nazwy zmiennych per blok 3

* unikalne nazwy funkcji 1

* funkcje w dowolnej kolejności 1

* typ returnu 4 



# ROZWIAZANIE

* 1 - pierwsze przejscie globalne

uzyte funkcje, unikalnosc ich nazw, czy naleza do topdef -- State
unikalnosc nazw argumentow

* 2 - predykat ::returns per funkcja

* 3 - unikalnosc zmiennych per blok + uzycie inicjalizowanych -- Env

* 4 + 3 - otypowanie całości, typ returnu i operacji ++,&& 
oraz typ calla funkcji, sprawdzenie typu main -- Env
Env :: Block -> (Map x -> type x)


returnTypeCorectness


